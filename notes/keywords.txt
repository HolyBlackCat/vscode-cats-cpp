keyword
    .control
        .multiline
            .branch
                if
                else
                switch
            .loop
                for
                while
                do
            .ex
                try
                catch
        .oneline
            .goto
                goto
            .loop
                break
                continue
            .return
                return
            .throw
                throw
    .operator
        .word
            and
            and_eq
            bitand
            bitor
            compl
            not
            not_eq
            or
            or_eq
            xor
            xor_eq
        .symbol
            .scope
                ::
            .member
                .
                ->
            .other
                ++
                --
                !
                &&
                ||
                ~
                &
                ^
                |
                <<
                >>
                *
                /
                %
                +
                -
                <=>
                <
                <=
                >
                >=
                ==
                !=
                =
            .ternary
                ?
                :
            .comma
                ,
            .bracket
                .round
                    (
                    )
                .curly
                    {
                    }
                .square
                    [
                    ]
    .other
        .memory
            new
            delete
        .co
            co_await
            co_return
            co_yield
        .type_property
            alignof
            sizeof
        .typeid
            typeid
        .decltype
            decltype
        .cast
            .const
                const_cast
            .dyn
                dynamic_cast
            .re
                reinterpret_cast
            .static
                static_cast
        .label
            .control
                case
                default
            .access
                private
                protected
                public
        .special
            .asm
                asm
            .typename
                typename
            .noexcept
                noexcept
            .requires
                requires
            .friend
                friend
            .static_assert
                static_assert
        .reserved
            register

storage
    .type
        .type
            .auto
                auto
            .void
                void
            .sign
                signed
                unsigned
            .other
                double
                float
                short
                int
                long
                char
                char8_t
                char16_t
                char32_t
                wchar_t
                bool
        .category
            enum
            namespace
            operator
            class
            union
            struct
            using
            typedef
            concept
            template
    .modifier
        .cv
			.const
				const
			.volatile
				volatile
        .storage
            thread_local
            extern
            static
            export
        .const
            .expr
                constexpr
            .eval
                consteval
        .other
			.virt
				virtual
			.explicit
				explicit
			.inline
				inline
			.mutable
				mutable
			.alignas
				alignas

constant.language
    .bool
        false
        true
    .this
        this
    .nullptr
        nullptr

------------- Context-sensitive -------------

keyword.other
    .override
        override
    .final
        final
    .audit
        audit
    .axiom
        axiom
    .import
        import
    .module
        module

------------- Attributes -------------
[[
storage.modifier
    .attrib
        .noret
            noreturn
        .carries_dep
            carries_dependency
        .depr
            deprecated
        .fall
            fallthrough
        .use
            nodiscard
        .unused
            maybe_unused
        .expr
            likely
            unlikely
        .no_uniq_addr
            no_unique_address
        .contract
            expects
            ensures
            assert
]]

------------- Preprocessor -------------

keyword.other.pp
    .dir
        #if
        #elif
        #else
        #endif
        #ifdef
        #ifndef
        #define
        #undef
        #include
        #line
        #error
        #pragma
    .dir_op
        defined
        __has_include
        __has_cpp_attribute
    .func
        _Pragma
    .const
        .mandatory
            __cplusplus
            __STDC_HOSTED__
            __FILE__
            __LINE__
            __DATE__
            __TIME__
            __STDCPP_DEFAULT_NEW_ALIGNMENT__
        .optional
            __STDC__
            __STDC_VERSION__
            __STDC_ISO_10646__
            __STDC_MB_MIGHT_NEQ_WC__
            __STDCPP_STRICT_POINTER_SAFETY__
            __STDCPP_THREADS__
            __cpp_[A-Za-z0-9_]*

//fff \
fff

// fff
fff

#if       1 == 1##2
#elif     1 == 1##2
#else
#endif
#ifdef    FOO
#ifndef   FOO
#define
#define   FOO 123  \
fff
fff
#define   FOO(a,b,c) 123##45
#undef
#include "ff"
#include <ff>
#include
#line
#error
#pragma