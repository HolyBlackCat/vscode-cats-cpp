keyword
    .control
        .multiline
            .branch
                if
                else
                switch
            .loop
                for
                while
                do
            .ex
                try
                catch
        .oneline
            .goto
                goto
            .loop
                break
                continue
            .return
                return
            .throw
                throw
    .operator
        .word
            and
            and_eq
            bitand
            bitor
            compl
            not
            not_eq
            or
            or_eq
            xor
            xor_eq
        .symbol
            .scope
                ::
            .member
                .
                ->
            .other
                ++
                --
                !
                &&
                ||
                ~
                &
                ^
                |
                <<
                >>
                *
                /
                %
                +
                -
                <=>
                <
                <=
                >
                >=
                ==
                !=
                =
            .ternary
                ?
                :
            .comma
                ,
            .bracket
                .round
                    (
                    )
                .curly
                    {
                    }
                .square
                    [
                    ]
    .other
        .memory
            new
            delete
        .co
            co_await
            co_return
            co_yield
        .type_property
            alignof
            sizeof
        .typeid
            typeid
        .decltype
            decltype
        .cast
            .const
                const_cast
            .dyn
                dynamic_cast
            .re
                reinterpret_cast
            .static
                static_cast
        .label
            .control
                case
                default
            .access
                private
                protected
                public
        .special
            .asm
                asm
            .typename
                typename
            .noexcept
                noexcept
            .requires
                requires
            .friend
                friend
            .static_assert
                static_assert
        .reserved
            register

storage
    .type
        .type
            .auto
                auto
            .void
                void
            .sign
                signed
                unsigned
            .other
                double
                float
                short
                int
                long
                char
                char8_t
                char16_t
                char32_t
                wchar_t
                bool
        .category
            enum
            namespace
            operator
            class
            union
            struct
            using
            typedef
            concept
            template
    .modifier
        .cv
			.const
				const
			.volatile
				volatile
        .storage
            thread_local
            extern
            static
            export
        .const
            .expr
                constexpr
            .eval
                consteval
        .other
			.virt
				virtual
			.explicit
				explicit
			.inline
				inline
			.mutable
				mutable
			.alignas
				alignas

constant.language
    .bool
        false
        true
    .this
        this
    .nullptr
        nullptr

------------- Context-sensitive -------------

keyword.other
    .override
        override
    .final
        final
    .audit
        audit
    .axiom
        axiom
    .import
        import
    .module
        module

------------- Attributes -------------
[[
storage.modifier
    .attrib
        .noret
            noreturn
        .carries_dep
            carries_dependency
        .depr
            deprecated
        .fall
            fallthrough
        .use
            nodiscard
        .unused
            maybe_unused
        .expr
            likely
            unlikely
        .no_uniq_addr
            no_unique_address
        .contract
            expects
            ensures
            assert
audit
axiom
]]

------------- Preprocessor -------------

keyword.other.pp
    .dir
        #if
        #elif
        #else
        #endif
        #ifdef
        #ifndef
        #define
        #undef
        #include
        #line
        #error
        #pragma
    .dir_op
        defined
        __has_include
        __has_cpp_attribute
    .func
        _Pragma
    .const
        .mandatory
            __cplusplus
            __STDC_HOSTED__
            __FILE__
            __LINE__
            __DATE__
            __TIME__
            __STDCPP_DEFAULT_NEW_ALIGNMENT__
        .optional
            __STDC__
            __STDC_VERSION__
            __STDC_ISO_10646__
            __STDC_MB_MIGHT_NEQ_WC__
            __STDCPP_STRICT_POINTER_SAFETY__
            __STDCPP_THREADS__
            __cpp_[A-Za-z0-9_]*

//fff \
fff

// fff
fff

#if       1 == 1##2
#elif     1 == 1##2
#else
#endif
#ifdef    FOO
#ifndef   FOO
#define
#define   FOO 123  \
fff
fff
#define   FOO(a,b,c) 123##45
#undef
#include "ff"
#include <ff>
#include
#line
#error
#pragma

f123foo
f0123foo
f0x123foo
f1e23foo
f1e+23foo
f1e-23foo
f10.e23foo
f10.e+23foo
f10.e-23foo
f.10e23foo
f10.10e23foo
f0x1p23foo
f0x1p+23foo
f0x1p-23foo
f0x10.p23foo
f0x10.p+23foo
f0x10.p-23foo
f0x.10p23foo
f0x10.10p23foo

112233foo
0112233foo
0112233foo
0x112233foo
102030e405060foo
102030e+405060foo
102030e-405060foo
102030.e405060foo
102030.e+405060foo
102030.e-405060foo
.102030e405060foo
102030.102030e405060foo
0x10Ff30p405060foo
0x10Ff30p+405060foo
0x10Ff30p-405060foo
0x10fF30.p405060foo
0x10fF30.p+405060foo
0x10fF30.p-405060foo
0x.10fF30p405060foo
0x10fF30.10fF30p405060foo

11'22'33foo
011'22'33foo
0'11'22'33foo
0x11'22'33foo
10'20'30e40'50'60foo
10'20'30e+40'50'60foo
10'20'30e-40'50'60foo
10'20'30.e40'50'60foo
10'20'30.e+40'50'60foo
10'20'30.e-40'50'60foo
.10'20'30e40'50'60foo
10'20'30.10'20'30e40'50'60foo
0x10'Ff'30p40'50'60foo
0x10'Ff'30p+40'50'60foo
0x10'Ff'30p-40'50'60foo
0x10'fF'30.p40'50'60foo
0x10'fF'30.p+40'50'60foo
0x10'fF'30.p-40'50'60foo
0x.10'fF'30p40'50'60foo
0x10'fF'30.10'fF'30p40'50'60foo

  'fdsa'
 L'fdsa'
u8'fdsa'
 u'fdsa'
 U'fdsa'
xx'fdsa'

  "fdsa"
 L"fdsa"
u8"fdsa"
 u"fdsa"
 U"fdsa"
xx"fdsa"

  'fd\
sa'
 L'fd\
sa'
u8'fd\
sa'
 u'fd\
sa'
 U'fd\
sa'
xx'fd\
sa'

  "fdsa"
 L"fdsa"
u8"fdsa"
 u"fdsa"
 U"fdsa"
xx"fdsa"

  "fd\
sa"
 L"fd\
sa"
u8"fd\
sa"
 u"fd\
sa"
 U"fd\
sa"
xx"fd\
sa"

'fasdf
xx
"fasdf
xx
'fasdf\
xx
yy
"fasdf\
xx
yy