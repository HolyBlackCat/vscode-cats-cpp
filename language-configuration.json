{
    "comments": {
        "lineComment": "//",
        "blockComment": ["/*", "*/"]
    },

    "brackets": [
        ["{", "}"],
        ["[", "]"],
        ["(", ")"]
    ],

    "autoClosingPairs": [
        {"open":"{",  "close":"}" , "notIn": ["string", "comment"]},
        {"open":"[",  "close":"]" , "notIn": ["string", "comment"]},
        {"open":"(",  "close":")" , "notIn": ["string", "comment"]},
        {"open":"\"", "close":"\"", "notIn": ["string"]},
        {"open":"'",  "close":"'" , "notIn": ["string"]}
    ],

    "surroundingPairs": [
        ["{", "}"],
        ["[", "]"],
        ["(", ")"],
        ["\"", "\""],
        ["'", "'"]
    ],

    "folding": {
        "markers": {
			"start": "^\\s*//\\s*{[^}]*$",
			"end": "^\\s*//\\s*}[^{]*$"
        }
    },

    "indentationRules": {
        // Indent if the line ends with `[{(` and then only whitespace or a `//` after whitespace.
        "increaseIndentPattern": "[[{(]\\s*(?:$|//)",
        // Unindent if the line begins with a `]})`.
        "decreaseIndentPattern": "^\\s*[\\]})]",
        // Indent single line only if the previous line starts with one of the keywords, and does NOT end with `;`.
        // Using `(?<!;)` instead of `[^;]` to handle `else` properly (because it immediately has the end of the line after it).
        "indentNextLinePattern": "^\\s*(?:if|else|for|while|do)\\b.*(?<!;)$"
    },

    "onEnterRules": [
        // When inside `[]`,`{}`,`()`, expand them on enter.
        // Note `^`,`$`. Otherwise they are searched anywhere in the half-line.
        {
            "beforeText": "[[{(]$",
            "afterText": "^[\\]})]",
            "action": {
                "indent": "indentOutdent",
            }
        },
        // Negate auto-indent after `if (...)` and such, which is caused by our `indentNextLinePattern` above.
        // We still want to keep the `indentNextLinePattern` to allow auto-indent on paste.
        {
            "beforeText": "^\\s*(?:if|else|for|while|do)\\b.*(?<!;)$",
            "action": {
                "indent": "none",
            }
        },
        // Auto-indent single-line `if (...)` and such. Firstly this happens automatically because of our `indentNextLinePattern`,
        //   and secondly we don't actually want this, so we explicitly negate it using the rule above.
        // {
        //     "previousLineText": "^\\s*(?:if|else|for|while|do)\\b.*(?<!;)$",
        //     "beforeText": "",
        //     "action": {
        //         "indent": "outdent",
        //     }
        // }
        // Continue comments if we're in the middle of the line. Note that we need to test `///` before `//` here.
        {
            "beforeText": "^\\s*///",
            "afterText": ".",
            "action": {
                "indent": "none",
                "appendText": "/// "
            }
        },
        {
            "beforeText": "^\\s*//",
            "afterText": ".",
            "action": {
                "indent": "none",
                "appendText": "// "
            }
        },
        // Continue comments if we're at the end of the line and have a comma there. Note that we need to test `///` before `//` here.
        {
            "beforeText": "^\\s*///.*,$",
            "afterText": "^$",
            "action": {
                "indent": "none",
                "appendText": "/// "
            }
        },
        {
            "beforeText": "^\\s*//.*,$",
            "afterText": "^$",
            "action": {
                "indent": "none",
                "appendText": "// "
            }
        },
    ]
}
